#!/bin/bash
# set vars here if you wish to run with no params
# CHECK_URL=""
# TELEGRAM_TOKEN=""
# TELEGRAM_CHAT=""

TELEGRAM_SH_DIR=~/.telegram-sh
DEBUG_MSG=false

# error repeat timeout
ERR_REPEAT_SECS=7200 # Repeat every 2 hrs

if [ ! -f "$TELEGRAM_SH_DIR/telegram" ]; then
  echo "telegram.sh missing. Running installation"
  git clone https://github.com/fabianonline/telegram.sh.git $TELEGRAM_SH_DIR
fi

if [ "$CHECK_URL" != "" ] && [ "$TELEGRAM_TOKEN" != "" ] && [ "$TELEGRAM_CHAT" != "" ]; then
  :
elif [ "$1" != "" ] && [ "$2" != "" ] && [ "$3" != "" ]; then
  CHECK_URL=$1
  TELEGRAM_TOKEN=$2
  TELEGRAM_CHAT=$3
else
  echo checkalive version 1.0
  echo 
  echo Usage: checkalive [CHECK_URL] [TELEGRAM_TOKEN] [TELEGRAM_CHAT]
  echo ex.: checkalive http://www.google.com 0123456789:AAAAAAAAA-BBBBBB-CCCCCCCCCCCCCCCCCC 123456789
  echo Please refer to $TELEGRAM_SH_DIR/README.md for details regarding TELEGRAM vars
  exit 0
fi

SANITIZED_URL=`echo $CHECK_URL |sed -e "s/\\///g"`
OK_TSTP_FILE="/tmp/checkalive_ok_$SANITIZED_URL"
ERR_TSTP_FILE="/tmp/checkalive_err_$SANITIZED_URL"
HTTP_STATUS=`curl -s -o /dev/null -w "%{http_code}" $CHECK_URL`
MESSAGE=""

if [ "$HTTP_STATUS" = "200" ]; then
  rm $ERR_TSTP_FILE 2>/dev/null
  if [ ! -f "$OK_TSTP_FILE" ]; then
    date +%s > $OK_TSTP_FILE
    MESSAGE="$CHECK_URL: monitoring OK (from $HOSTNAME)"
  fi
else
  rm $OK_TSTP_FILE 2>/dev/null
  if [ ! -f "$ERR_TSTP_FILE" ]; then
    date +%s > $ERR_TSTP_FILE
    MESSAGE="$CHECK_URL: monitoring DOWN! (from $HOSTNAME)"
  else
    if [ $(( `date +%s`-`cat $ERR_TSTP_FILE` )) -gt $ERR_REPEAT_SECS ]; then
      # Error timeout expired: repeat error message
      date +%s > $ERR_TSTP_FILE
      MESSAGE="$CHECK_URL: repeated monitoring DOWN! (from $HOSTNAME)"
    fi
  fi
fi

if [ "$MESSAGE" != "" ]; then
  if [ "$DEBUG_MSG" = true ]; then
    echo $MESSAGE
  fi
  $TELEGRAM_SH_DIR/telegram "$MESSAGE" -t $TELEGRAM_TOKEN -c $TELEGRAM_CHAT
fi
